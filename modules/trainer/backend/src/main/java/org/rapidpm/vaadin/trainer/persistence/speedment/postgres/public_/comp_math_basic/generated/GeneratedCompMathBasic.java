package org.rapidpm.vaadin.trainer.persistence.speedment.postgres.public_.comp_math_basic.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.BooleanField;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.DoubleField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.sql.Timestamp;
import java.util.Optional;
import org.rapidpm.vaadin.trainer.persistence.speedment.postgres.public_.comp_math_basic.CompMathBasic;

/**
 * The generated base for the {@link
 * org.rapidpm.vaadin.trainer.persistence.speedment.postgres.public_.comp_math_basic.CompMathBasic}-interface
 * representing entities of the {@code comp_math_basic}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedCompMathBasic {
    
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getId()} method.
     */
    ShortField<CompMathBasic, Short> ID = ShortField.create(
        Identifier.ID,
        CompMathBasic::getId,
        CompMathBasic::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getOpA()} method.
     */
    DoubleField<CompMathBasic, Double> OP_A = DoubleField.create(
        Identifier.OP_A,
        CompMathBasic::getOpA,
        CompMathBasic::setOpA,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getOp()} method.
     */
    StringField<CompMathBasic, String> OP = StringField.create(
        Identifier.OP,
        CompMathBasic::getOp,
        CompMathBasic::setOp,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getOpB()} method.
     */
    StringField<CompMathBasic, String> OP_B = StringField.create(
        Identifier.OP_B,
        CompMathBasic::getOpB,
        CompMathBasic::setOpB,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getResultMachine()} method.
     */
    DoubleField<CompMathBasic, Double> RESULT_MACHINE = DoubleField.create(
        Identifier.RESULT_MACHINE,
        CompMathBasic::getResultMachine,
        CompMathBasic::setResultMachine,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getResultHuman()} method.
     */
    StringField<CompMathBasic, String> RESULT_HUMAN = StringField.create(
        Identifier.RESULT_HUMAN,
        o -> OptionalUtil.unwrap(o.getResultHuman()),
        CompMathBasic::setResultHuman,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getResultOk()} method.
     */
    BooleanField<CompMathBasic, Boolean> RESULT_OK = BooleanField.create(
        Identifier.RESULT_OK,
        CompMathBasic::getResultOk,
        CompMathBasic::setResultOk,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link CompMathBasic} field that can be
     * obtained using the {@link CompMathBasic#getCreated()} method.
     */
    ComparableField<CompMathBasic, Timestamp, Timestamp> CREATED = ComparableField.create(
        Identifier.CREATED,
        CompMathBasic::getCreated,
        CompMathBasic::setCreated,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this CompMathBasic. The id field corresponds to the
     * database column postgres.public.comp_math_basic.id.
     * 
     * @return the id of this CompMathBasic
     */
    short getId();
    
    /**
     * Returns the opA of this CompMathBasic. The opA field corresponds to the
     * database column postgres.public.comp_math_basic.op_a.
     * 
     * @return the opA of this CompMathBasic
     */
    double getOpA();
    
    /**
     * Returns the op of this CompMathBasic. The op field corresponds to the
     * database column postgres.public.comp_math_basic.op.
     * 
     * @return the op of this CompMathBasic
     */
    String getOp();
    
    /**
     * Returns the opB of this CompMathBasic. The opB field corresponds to the
     * database column postgres.public.comp_math_basic.op_b.
     * 
     * @return the opB of this CompMathBasic
     */
    String getOpB();
    
    /**
     * Returns the resultMachine of this CompMathBasic. The resultMachine field
     * corresponds to the database column
     * postgres.public.comp_math_basic.result_machine.
     * 
     * @return the resultMachine of this CompMathBasic
     */
    double getResultMachine();
    
    /**
     * Returns the resultHuman of this CompMathBasic. The resultHuman field
     * corresponds to the database column
     * postgres.public.comp_math_basic.result_human.
     * 
     * @return the resultHuman of this CompMathBasic
     */
    Optional<String> getResultHuman();
    
    /**
     * Returns the resultOk of this CompMathBasic. The resultOk field
     * corresponds to the database column
     * postgres.public.comp_math_basic.result_ok.
     * 
     * @return the resultOk of this CompMathBasic
     */
    boolean getResultOk();
    
    /**
     * Returns the created of this CompMathBasic. The created field corresponds
     * to the database column postgres.public.comp_math_basic.created.
     * 
     * @return the created of this CompMathBasic
     */
    Timestamp getCreated();
    
    /**
     * Sets the id of this CompMathBasic. The id field corresponds to the
     * database column postgres.public.comp_math_basic.id.
     * 
     * @param id to set of this CompMathBasic
     * @return   this CompMathBasic instance
     */
    CompMathBasic setId(short id);
    
    /**
     * Sets the opA of this CompMathBasic. The opA field corresponds to the
     * database column postgres.public.comp_math_basic.op_a.
     * 
     * @param opA to set of this CompMathBasic
     * @return    this CompMathBasic instance
     */
    CompMathBasic setOpA(double opA);
    
    /**
     * Sets the op of this CompMathBasic. The op field corresponds to the
     * database column postgres.public.comp_math_basic.op.
     * 
     * @param op to set of this CompMathBasic
     * @return   this CompMathBasic instance
     */
    CompMathBasic setOp(String op);
    
    /**
     * Sets the opB of this CompMathBasic. The opB field corresponds to the
     * database column postgres.public.comp_math_basic.op_b.
     * 
     * @param opB to set of this CompMathBasic
     * @return    this CompMathBasic instance
     */
    CompMathBasic setOpB(String opB);
    
    /**
     * Sets the resultMachine of this CompMathBasic. The resultMachine field
     * corresponds to the database column
     * postgres.public.comp_math_basic.result_machine.
     * 
     * @param resultMachine to set of this CompMathBasic
     * @return              this CompMathBasic instance
     */
    CompMathBasic setResultMachine(double resultMachine);
    
    /**
     * Sets the resultHuman of this CompMathBasic. The resultHuman field
     * corresponds to the database column
     * postgres.public.comp_math_basic.result_human.
     * 
     * @param resultHuman to set of this CompMathBasic
     * @return            this CompMathBasic instance
     */
    CompMathBasic setResultHuman(String resultHuman);
    
    /**
     * Sets the resultOk of this CompMathBasic. The resultOk field corresponds
     * to the database column postgres.public.comp_math_basic.result_ok.
     * 
     * @param resultOk to set of this CompMathBasic
     * @return         this CompMathBasic instance
     */
    CompMathBasic setResultOk(boolean resultOk);
    
    /**
     * Sets the created of this CompMathBasic. The created field corresponds to
     * the database column postgres.public.comp_math_basic.created.
     * 
     * @param created to set of this CompMathBasic
     * @return        this CompMathBasic instance
     */
    CompMathBasic setCreated(Timestamp created);
    
    enum Identifier implements ColumnIdentifier<CompMathBasic> {
        
        ID             ("id"),
        OP_A           ("op_a"),
        OP             ("op"),
        OP_B           ("op_b"),
        RESULT_MACHINE ("result_machine"),
        RESULT_HUMAN   ("result_human"),
        RESULT_OK      ("result_ok"),
        CREATED        ("created");
        
        private final String columnName;
        private final TableIdentifier<CompMathBasic> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "postgres";
        }
        
        @Override
        public String getSchemaName() {
            return "public";
        }
        
        @Override
        public String getTableName() {
            return "comp_math_basic";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<CompMathBasic> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}